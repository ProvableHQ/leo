namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: 480e3d1e1fdc4718c7f2a8a0b7a6b1a7f2243b74b49855f5468f1dc425fee8e7
      type_checked_symbol_table: d916e4ab2c45e95fb1da32e78d7bb089f2a38e09afc0a19d9249d659110bdff3
      unrolled_symbol_table: d916e4ab2c45e95fb1da32e78d7bb089f2a38e09afc0a19d9249d659110bdff3
      initial_ast: b0e1262b9d03522d0707dc941c7a4c8d7456a39c40b1b1b1e871211bbf523341
      unrolled_ast: acb9cb4c6e1c851516357aa55867049913fbd4b551fab4722e83ab4de82f5ba8
      ssa_ast: f137e104bbb7d7a0559a7266ffcddaa9a973d8111d9c37405ab4a27a8aa0ac9e
      flattened_ast: a45aaac9032646f13fdf858730d4d6b0f6c6d3af8e9febb654a847542a07b4a8
      destructured_ast: 28b9eba3d18205fe1f17db1cb43bbf9fd9fbe58a09c85c7b5d777d6b8ea80769
      inlined_ast: 28b9eba3d18205fe1f17db1cb43bbf9fd9fbe58a09c85c7b5d777d6b8ea80769
      dce_ast: 28b9eba3d18205fe1f17db1cb43bbf9fd9fbe58a09c85c7b5d777d6b8ea80769
      bytecode: |
        program test.aleo;

        record board_state:
            owner as address.private;
            hits_and_misses as u64.private;
            played_tiles as u64.private;
            ships as u64.private;
            player_1 as address.private;
            player_2 as address.private;
            game_started as boolean.private;

        function new_board_state:
            input r0 as u64.private;
            input r1 as address.private;
            cast self.caller 0u64 0u64 r0 self.caller r1 false into r2 as board_state.record;
            output r2 as board_state.record;

        function start_board:
            input r0 as board_state.record;
            not r0.game_started into r1;
            assert.eq r1 true;
            cast r0.owner r0.hits_and_misses r0.played_tiles r0.ships r0.player_1 r0.player_2 true into r2 as board_state.record;
            output r2 as board_state.record;

        function update_played_tiles:
            input r0 as board_state.record;
            input r1 as u64.private;
            sub r1 1u64 into r2;
            and r1 r2 into r3;
            assert.eq r3 0u64;
            and r1 r0.played_tiles into r4;
            assert.eq r4 0u64;
            or r0.played_tiles r1 into r5;
            cast r0.owner r0.hits_and_misses r5 r0.ships r0.player_1 r0.player_2 r0.game_started into r6 as board_state.record;
            output r6 as board_state.record;

        function update_hits_and_misses:
            input r0 as board_state.record;
            input r1 as u64.private;
            or r0.hits_and_misses r1 into r2;
            cast r0.owner r2 r0.played_tiles r0.ships r0.player_1 r0.player_2 r0.game_started into r3 as board_state.record;
            output r3 as board_state.record;
      errors: ''
      warnings: ''
