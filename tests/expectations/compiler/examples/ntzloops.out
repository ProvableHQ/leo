namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: 9dff67a7c8fe11726dabdd3e46bfde8428fa0b721a16e68666ef364610ae56ea
      type_checked_symbol_table: c29f92316145afc961424e33fc71957604128a4c97f03750fb49a73f552ac27c
      unrolled_symbol_table: 7b41e8912a857d2573d4ac81030de767704fbb1c5f288b3204cfdc407f593b4f
      initial_ast: fddba4f56016625454f5d5da3fa81487ea9b30358b35269f8bf700976590cfb9
      unrolled_ast: 02947c30c03d6e87c8afedbfb9dca639248a1777bfb4b9265ee62eb6280b617e
      ssa_ast: 108f90cd2f8b1a79ec0ae244985a9213392e72eeed6caa8ef41ba5950ab11ef9
      flattened_ast: 48ce9c5f60818c67cb02f0627c0c04feabf2eb17aa7a4314b334102b15a3f65e
      destructured_ast: 59982ab4709732bc012791803270488fcf58444158cd0c736babe82138c1970b
      inlined_ast: 59982ab4709732bc012791803270488fcf58444158cd0c736babe82138c1970b
      dce_ast: 57f7c5aa1e4a6de27de6e215a500c2f0831d0cb282dc4d022ab907fec73a64b8
      bytecode: |
        program test.aleo;

        function main:
            input r0 as u32.public;
            not r0 into r1;
            sub.w r0 1u32 into r2;
            and r1 r2 into r3;
            is.neq r3 0u32 into r4;
            add 0u8 1u8 into r5;
            shr r3 1u8 into r6;
            ternary r4 r5 0u8 into r7;
            ternary r4 r6 r3 into r8;
            is.neq r8 0u32 into r9;
            add r7 1u8 into r10;
            shr r8 1u8 into r11;
            ternary r9 r10 r7 into r12;
            ternary r9 r11 r8 into r13;
            is.neq r13 0u32 into r14;
            add r12 1u8 into r15;
            shr r13 1u8 into r16;
            ternary r14 r15 r12 into r17;
            ternary r14 r16 r13 into r18;
            is.neq r18 0u32 into r19;
            add r17 1u8 into r20;
            shr r18 1u8 into r21;
            ternary r19 r20 r17 into r22;
            ternary r19 r21 r18 into r23;
            is.neq r23 0u32 into r24;
            add r22 1u8 into r25;
            shr r23 1u8 into r26;
            ternary r24 r25 r22 into r27;
            ternary r24 r26 r23 into r28;
            is.neq r28 0u32 into r29;
            add r27 1u8 into r30;
            shr r28 1u8 into r31;
            ternary r29 r30 r27 into r32;
            ternary r29 r31 r28 into r33;
            is.neq r33 0u32 into r34;
            add r32 1u8 into r35;
            shr r33 1u8 into r36;
            ternary r34 r35 r32 into r37;
            ternary r34 r36 r33 into r38;
            is.neq r38 0u32 into r39;
            add r37 1u8 into r40;
            shr r38 1u8 into r41;
            ternary r39 r40 r37 into r42;
            ternary r39 r41 r38 into r43;
            is.neq r43 0u32 into r44;
            add r42 1u8 into r45;
            shr r43 1u8 into r46;
            ternary r44 r45 r42 into r47;
            ternary r44 r46 r43 into r48;
            is.neq r48 0u32 into r49;
            add r47 1u8 into r50;
            shr r48 1u8 into r51;
            ternary r49 r50 r47 into r52;
            ternary r49 r51 r48 into r53;
            is.neq r53 0u32 into r54;
            add r52 1u8 into r55;
            shr r53 1u8 into r56;
            ternary r54 r55 r52 into r57;
            ternary r54 r56 r53 into r58;
            is.neq r58 0u32 into r59;
            add r57 1u8 into r60;
            shr r58 1u8 into r61;
            ternary r59 r60 r57 into r62;
            ternary r59 r61 r58 into r63;
            is.neq r63 0u32 into r64;
            add r62 1u8 into r65;
            shr r63 1u8 into r66;
            ternary r64 r65 r62 into r67;
            ternary r64 r66 r63 into r68;
            is.neq r68 0u32 into r69;
            add r67 1u8 into r70;
            shr r68 1u8 into r71;
            ternary r69 r70 r67 into r72;
            ternary r69 r71 r68 into r73;
            is.neq r73 0u32 into r74;
            add r72 1u8 into r75;
            shr r73 1u8 into r76;
            ternary r74 r75 r72 into r77;
            ternary r74 r76 r73 into r78;
            is.neq r78 0u32 into r79;
            add r77 1u8 into r80;
            shr r78 1u8 into r81;
            ternary r79 r80 r77 into r82;
            ternary r79 r81 r78 into r83;
            is.neq r83 0u32 into r84;
            add r82 1u8 into r85;
            shr r83 1u8 into r86;
            ternary r84 r85 r82 into r87;
            ternary r84 r86 r83 into r88;
            is.neq r88 0u32 into r89;
            add r87 1u8 into r90;
            shr r88 1u8 into r91;
            ternary r89 r90 r87 into r92;
            ternary r89 r91 r88 into r93;
            is.neq r93 0u32 into r94;
            add r92 1u8 into r95;
            shr r93 1u8 into r96;
            ternary r94 r95 r92 into r97;
            ternary r94 r96 r93 into r98;
            is.neq r98 0u32 into r99;
            add r97 1u8 into r100;
            shr r98 1u8 into r101;
            ternary r99 r100 r97 into r102;
            ternary r99 r101 r98 into r103;
            is.neq r103 0u32 into r104;
            add r102 1u8 into r105;
            shr r103 1u8 into r106;
            ternary r104 r105 r102 into r107;
            ternary r104 r106 r103 into r108;
            is.neq r108 0u32 into r109;
            add r107 1u8 into r110;
            shr r108 1u8 into r111;
            ternary r109 r110 r107 into r112;
            ternary r109 r111 r108 into r113;
            is.neq r113 0u32 into r114;
            add r112 1u8 into r115;
            shr r113 1u8 into r116;
            ternary r114 r115 r112 into r117;
            ternary r114 r116 r113 into r118;
            is.neq r118 0u32 into r119;
            add r117 1u8 into r120;
            shr r118 1u8 into r121;
            ternary r119 r120 r117 into r122;
            ternary r119 r121 r118 into r123;
            is.neq r123 0u32 into r124;
            add r122 1u8 into r125;
            shr r123 1u8 into r126;
            ternary r124 r125 r122 into r127;
            ternary r124 r126 r123 into r128;
            is.neq r128 0u32 into r129;
            add r127 1u8 into r130;
            shr r128 1u8 into r131;
            ternary r129 r130 r127 into r132;
            ternary r129 r131 r128 into r133;
            is.neq r133 0u32 into r134;
            add r132 1u8 into r135;
            shr r133 1u8 into r136;
            ternary r134 r135 r132 into r137;
            ternary r134 r136 r133 into r138;
            is.neq r138 0u32 into r139;
            add r137 1u8 into r140;
            shr r138 1u8 into r141;
            ternary r139 r140 r137 into r142;
            ternary r139 r141 r138 into r143;
            is.neq r143 0u32 into r144;
            add r142 1u8 into r145;
            shr r143 1u8 into r146;
            ternary r144 r145 r142 into r147;
            ternary r144 r146 r143 into r148;
            is.neq r148 0u32 into r149;
            add r147 1u8 into r150;
            shr r148 1u8 into r151;
            ternary r149 r150 r147 into r152;
            ternary r149 r151 r148 into r153;
            is.neq r153 0u32 into r154;
            add r152 1u8 into r155;
            shr r153 1u8 into r156;
            ternary r154 r155 r152 into r157;
            ternary r154 r156 r153 into r158;
            is.neq r158 0u32 into r159;
            add r157 1u8 into r160;
            ternary r159 r160 r157 into r161;
            output r161 as u8.private;
      errors: ''
      warnings: ''
