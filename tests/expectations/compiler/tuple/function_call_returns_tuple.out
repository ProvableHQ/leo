namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: 28331a05f099f64dd23806fdf848c1d57d30b17b9ea7b5e309f4d7a7e8d4162b
      type_checked_symbol_table: 449efa2e1b7143cb9523cd40a1da99bd54863c3fd68e39a820173bddc544226c
      unrolled_symbol_table: 449efa2e1b7143cb9523cd40a1da99bd54863c3fd68e39a820173bddc544226c
      initial_ast: 0c172f9b4921fc30d51d61eaa6205537ce6b0e1146864050154ad4a09edfaeea
      unrolled_ast: 0c172f9b4921fc30d51d61eaa6205537ce6b0e1146864050154ad4a09edfaeea
      ssa_ast: 7f57febaeac178acde1e72b5b4287ec436a1cd62a3cc941b4bd3faec97bac7a4
      flattened_ast: 25735f73cb92c1be5a3bd29343ef17b41696cf69476975362fb9511cbd59259e
      destructured_ast: aad1e2db50ba1033c0efd65edd1583750e27de6dd9c33485aa575f1afa89292b
      inlined_ast: 3b0ed1659eecd3ee8330217fc7862bf09bfe8a74d63c7f3451b0f1a3ced1dddb
      dce_ast: 3b0ed1659eecd3ee8330217fc7862bf09bfe8a74d63c7f3451b0f1a3ced1dddb
      bytecode: |
        program test.aleo;

        closure foo:
            input r0 as u8;
            input r1 as u8;
            is.eq r0 r1 into r2;
            add r0 r1 into r3;
            sub r0 r1 into r4;
            ternary r2 r0 r3 into r5;
            ternary r2 r1 r4 into r6;
            output r5 as u8;
            output r6 as u8;

        function bar:
            input r0 as boolean.private;
            input r1 as u8.private;
            input r2 as u8.private;
            call foo r1 r2 into r3 r4;
            call foo r3 r4 into r5 r6;
            call foo r4 r3 into r7 r8;
            ternary r0 r5 r7 into r9;
            ternary r0 r6 r8 into r10;
            output r9 as u8.private;
            output r10 as u8.private;
      errors: ''
      warnings: ''
