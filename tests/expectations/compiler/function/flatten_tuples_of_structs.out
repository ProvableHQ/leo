namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: d964d8a38b2e4c8e33fd7a00bb030825ad72e30dc6530ebbe8196fca68a93e90
      type_checked_symbol_table: 0cb246294e6a9c962e0596a8ff53a451bce88a9edfe538fbe86dfd919f789921
      unrolled_symbol_table: 0cb246294e6a9c962e0596a8ff53a451bce88a9edfe538fbe86dfd919f789921
      initial_ast: 35bd2bdf56095dd40ac177376dc338e04f1c08c7319d2412b51a23478ad098e8
      unrolled_ast: 35bd2bdf56095dd40ac177376dc338e04f1c08c7319d2412b51a23478ad098e8
      ssa_ast: d2990bbfa8df60235f5df4065f98680019c6a4fcf9793a6f980f0365b84b6681
      flattened_ast: c161f50116bd41f95cffa7d6670a8adc9dfa844ca567a2f9a3a5d7bc4359e9cf
      destructured_ast: 9ecdb14aaa23abf791f111c97c913c47e82ecdae2eb6bda3a62c7fd237c2a490
      inlined_ast: 6b6bd0b9752078281824afddf821e42f57ba1bcb1c6249ecfe43f98878db95c6
      dce_ast: 6b6bd0b9752078281824afddf821e42f57ba1bcb1c6249ecfe43f98878db95c6
      bytecode: |
        program test.aleo;

        struct Extra:
            c as u8;

        struct Data:
            a as u8;
            b as u8;
            c as Extra;

        closure foo:
            input r0 as u8;
            input r1 as u8;
            cast r0 into r2 as Extra;
            cast r0 r1 r2 into r3 as Data;
            is.eq r0 r1 into r4;
            add r0 r1 into r5;
            sub r0 r1 into r6;
            ternary r4 r0 r5 into r7;
            ternary r4 r1 r6 into r8;
            ternary r4 r3.a r3.a into r9;
            ternary r4 r3.b r3.b into r10;
            ternary r4 r3.c.c r3.c.c into r11;
            cast r11 into r12 as Extra;
            cast r9 r10 r12 into r13 as Data;
            output r7 as u8;
            output r8 as u8;
            output r13 as Data;

        function bar:
            input r0 as boolean.private;
            input r1 as boolean.private;
            input r2 as u8.private;
            input r3 as u8.private;
            call foo r2 r3 into r4 r5 r6;
            call foo r4 r6.c.c into r7 r8 r9;
            call foo r5 r6.b into r10 r11 r12;
            call foo r6.a r5 into r13 r14 r15;
            ternary r1 r10 r13 into r16;
            ternary r1 r11 r14 into r17;
            ternary r1 r12.a r15.a into r18;
            ternary r1 r12.b r15.b into r19;
            ternary r1 r12.c.c r15.c.c into r20;
            cast r20 into r21 as Extra;
            cast r18 r19 r21 into r22 as Data;
            ternary r0 r7 r16 into r23;
            ternary r0 r8 r17 into r24;
            ternary r0 r9.a r22.a into r25;
            ternary r0 r9.b r22.b into r26;
            ternary r0 r9.c.c r22.c.c into r27;
            cast r27 into r28 as Extra;
            cast r25 r26 r28 into r29 as Data;
            output r23 as u8.private;
            output r24 as u8.private;
            output r29 as Data.private;
      errors: ''
      warnings: ''
