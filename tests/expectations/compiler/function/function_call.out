namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: 35c97567764961ff6fbc23d98b890dd313f80812135de16382028f687c32cf2e
      type_checked_symbol_table: 2e2d79605b8d612b84bef68fbfc07f6a4594cf55b9addeaa197547f1d696de55
      unrolled_symbol_table: 2e2d79605b8d612b84bef68fbfc07f6a4594cf55b9addeaa197547f1d696de55
      initial_ast: 8b68fd0f18e8fc74db391751baaa281e3b62ab56208b7d910040d10fb775261a
      unrolled_ast: 8b68fd0f18e8fc74db391751baaa281e3b62ab56208b7d910040d10fb775261a
      ssa_ast: 4d36ab9d484d0d7eaec140ff70e1b43f9484a067dc3b5717e0719e78c46754f2
      flattened_ast: b70445099700e553ea7b08ff344f20111d4bf8872e7ee3c6d7d53fa2120d4330
      destructured_ast: 4158b11b7cc18331b1e021e6904859d30dc39bb3362f62be25ab7458efc59186
      inlined_ast: b35e6f20e8c643ef716e553b152d6be6370bf712b6e29572a0069fa105174d54
      dce_ast: b35e6f20e8c643ef716e553b152d6be6370bf712b6e29572a0069fa105174d54
      bytecode: |
        program test.aleo;

        closure adder:
            input r0 as u32;
            input r1 as u32;
            add r0 r1 into r2;
            output r2 as u32;

        closure subber:
            input r0 as u32;
            input r1 as u32;
            sub r0 r1 into r2;
            output r2 as u32;

        function main:
            input r0 as u32.private;
            input r1 as u32.private;
            input r2 as boolean.private;
            call adder r0 r1 into r3;
            call subber r0 r1 into r4;
            ternary r2 r3 r4 into r5;
            output r5 as u32.private;
      errors: ''
      warnings: ''
