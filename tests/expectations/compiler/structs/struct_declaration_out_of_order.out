namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: be950b64dff74bb4ad08faa37527874d28cc07461aa058f03d4d5e8994984d51
      type_checked_symbol_table: b3a46c44d3dce231e93a790aaf2ca0a2428a35e7180603c314191673e969a871
      unrolled_symbol_table: b3a46c44d3dce231e93a790aaf2ca0a2428a35e7180603c314191673e969a871
      initial_ast: 6f30585164eb4d8aff31f8427cb667740fde41ed391820f1536201b027933020
      unrolled_ast: 6f30585164eb4d8aff31f8427cb667740fde41ed391820f1536201b027933020
      ssa_ast: 753d548ee07f7271eea880232061fa6cf6fbe0cf33305adf27b99e77084a4d75
      flattened_ast: 155b30d8457f01a785c924db88f2e56cb8eed24f0b4734162002e6c8c5641b84
      destructured_ast: 81a07e90a02d1819b7a507066af8c4890a435bc44f29a76082eae87567518ad6
      inlined_ast: 81a07e90a02d1819b7a507066af8c4890a435bc44f29a76082eae87567518ad6
      dce_ast: 81a07e90a02d1819b7a507066af8c4890a435bc44f29a76082eae87567518ad6
      bytecode: |
        program test.aleo;

        struct A:
            data as u8;

        struct C:
            data as u8;

        struct E:
            data as u8;

        struct D:
            c as C;
            e as E;

        struct B:
            a as A;
            d as D;

        struct H:
            data as u8;

        struct I:
            h as H;

        struct G:
            i as I;

        struct F:
            b as B;
            g as G;

        function foo:
            input r0 as F.private;
            add r0.b.a.data r0.b.d.c.data into r1;
            add r1 r0.b.d.e.data into r2;
            add r2 r0.g.i.h.data into r3;
            output r3 as u8.private;
      errors: ''
      warnings: ''
