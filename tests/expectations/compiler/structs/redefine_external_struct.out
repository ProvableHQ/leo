namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: 74e53781a60f54132c609b3b03492c4250036c379e5204b93329a9f57d49fe91
      type_checked_symbol_table: 8851bc9f35e154359b0cbcc34f19cd64e3ebfcbacd301e070ad4b44e399d897c
      unrolled_symbol_table: 8851bc9f35e154359b0cbcc34f19cd64e3ebfcbacd301e070ad4b44e399d897c
      initial_ast: 74b39a65214c6dd05311092d4e59bd51eae97ebd18d1d680b1db55cfb54beddf
      unrolled_ast: 74b39a65214c6dd05311092d4e59bd51eae97ebd18d1d680b1db55cfb54beddf
      ssa_ast: 9d457405594c43b13f129dcd8b95302086654fa55355b387c83aabaaee1f2d6d
      flattened_ast: 03e9facafccbbc398b682d08a79df26fdd778b91f2f4bed225ce5a5323e2171b
      destructured_ast: 1970939a0425fa00978dc2822b28f011d3c27a16aa6d9e4bad7ff681a0a7411f
      inlined_ast: 1970939a0425fa00978dc2822b28f011d3c27a16aa6d9e4bad7ff681a0a7411f
      dce_ast: 1970939a0425fa00978dc2822b28f011d3c27a16aa6d9e4bad7ff681a0a7411f
      bytecode: |
        program child.aleo;

        struct Two:
            val1 as u32;
            val2 as u32;

        struct One:
            two as [Two; 2u32];

        struct Baz:
            one as One;

        struct Bar:
            baz as [Baz; 2u32];

        struct Foo:
            bar as [Bar; 1u32];

        function create:
            cast 1u32 2u32 into r0 as Two;
            cast 3u32 4u32 into r1 as Two;
            cast  r0 r1 into r2 as [Two; 2u32];
            cast r2 into r3 as One;
            cast r3 into r4 as Baz;
            cast 5u32 6u32 into r5 as Two;
            cast 7u32 8u32 into r6 as Two;
            cast  r5 r6 into r7 as [Two; 2u32];
            cast r7 into r8 as One;
            cast r8 into r9 as Baz;
            cast  r4 r9 into r10 as [Baz; 2u32];
            cast r10 into r11 as Bar;
            cast  r11 into r12 as [Bar; 1u32];
            cast r12 into r13 as Foo;
            output r13 as Foo.private;
      errors: ''
      warnings: ''
    - initial_symbol_table: bb3a69180106d91616ac9d6778fe8aee0fbdaab72b1b079183ebd0fcf772e359
      type_checked_symbol_table: 92c4575a892476360e9efc1a118f534c1901622faca71626bb5778f76332e5cb
      unrolled_symbol_table: 92c4575a892476360e9efc1a118f534c1901622faca71626bb5778f76332e5cb
      initial_ast: 4406bc30d232c90c5069c388652b051dbb9e5378a20f38e69cf9f847ae83aee0
      unrolled_ast: 2f3e72af631b9e4cdd067c40959e112bb0a7d1a5076a6c44b818c322ab4229f7
      ssa_ast: fcc3c8e717138f0c75a3c7765b26af7e5d009d1d7afd239b782ef56f0b0f3763
      flattened_ast: 435f235eed4f63f31e391e6455014bd64de1320f147d156e4453414dca21752f
      destructured_ast: cdce20251477a5fa781fb90ae69dd08e12710b9d39363d4eecbfb81ac05e7481
      inlined_ast: cdce20251477a5fa781fb90ae69dd08e12710b9d39363d4eecbfb81ac05e7481
      dce_ast: a40a9b93296c22a41a527727f8cf61dc11dbed23ac00c3577333a63d6d1393f8
      bytecode: |
        import child.aleo;
        program parent.aleo;

        struct Two:
            val1 as u32;
            val2 as u32;

        struct One:
            two as [Two; 2u32];

        struct Baz:
            one as One;

        struct Bar:
            baz as [Baz; 2u32];

        struct Foo:
            bar as [Bar; 1u32];

        function create_wrapper:
            call child.aleo/create into r0;
            output r0 as Foo.private;
      errors: ''
      warnings: ''
