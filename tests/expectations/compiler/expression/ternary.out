namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: d6ebbdbb0ac55a0338ca71cab7bdbd5fddd4782965afba8dd6ed0e631ada84d1
      type_checked_symbol_table: 4e3cf3d38f23ca67542003bb4985603b64c43b358f5cc0a067a1f8ba8fa7703a
      unrolled_symbol_table: 4e3cf3d38f23ca67542003bb4985603b64c43b358f5cc0a067a1f8ba8fa7703a
      initial_ast: b48a2050069f5e13014983f5b5b648f528e9478da91c008912364faff53090ce
      unrolled_ast: b48a2050069f5e13014983f5b5b648f528e9478da91c008912364faff53090ce
      ssa_ast: 797dccb7d8f7d42268a907c930af0ab54d87b26df3627656c4685191486d8e5f
      flattened_ast: 523b26f743f704636b3cdab1693c82012419e05a87ff3a7319302f06ba08c365
      destructured_ast: a8f7c9cef239326de6534ac8c67886fe4e687d91141c81a874e374ca9766b424
      inlined_ast: a8f7c9cef239326de6534ac8c67886fe4e687d91141c81a874e374ca9766b424
      dce_ast: a8f7c9cef239326de6534ac8c67886fe4e687d91141c81a874e374ca9766b424
      bytecode: |
        program test.aleo;

        function main:
            input r0 as address.private;
            input r1 as boolean.private;
            input r2 as field.private;
            input r3 as i8.private;
            input r4 as i16.private;
            input r5 as i64.private;
            input r6 as i128.private;
            input r7 as u8.private;
            input r8 as u16.private;
            input r9 as u32.private;
            input r10 as u64.private;
            input r11 as u128.private;
            input r12 as scalar.private;
            input r13 as i32.private;
            ternary r1 r0 r0 into r14;
            ternary r1 r1 r1 into r15;
            ternary r1 r2 r2 into r16;
            ternary r1 r3 r3 into r17;
            ternary r1 r4 r4 into r18;
            ternary r1 r5 r5 into r19;
            ternary r1 r6 r6 into r20;
            ternary r1 r7 r7 into r21;
            ternary r1 r8 r8 into r22;
            ternary r1 r9 r9 into r23;
            ternary r1 r10 r10 into r24;
            ternary r1 r11 r11 into r25;
            ternary r1 r12 r12 into r26;
            ternary r1 r13 r13 into r27;
            output r14 as address.private;
            output r15 as boolean.private;
            output r16 as field.private;
            output r17 as i8.private;
            output r18 as i16.private;
            output r19 as i64.private;
            output r20 as i128.private;
            output r21 as u8.private;
            output r22 as u16.private;
            output r23 as u32.private;
            output r24 as u64.private;
            output r25 as u128.private;
            output r26 as scalar.private;
            output r27 as i32.private;
      errors: ''
      warnings: ''
