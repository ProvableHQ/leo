namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: 3f9924dd0dd047baffbbd264bff45deeeb9c7f0e5b85cec1f09d368ccf2da34d
      type_checked_symbol_table: b63238fe925dc148180f075a969645f67188ebf518232f630a7c84c8d9fd68a2
      unrolled_symbol_table: b63238fe925dc148180f075a969645f67188ebf518232f630a7c84c8d9fd68a2
      initial_ast: 0b156106d2f50efe97476dfdd1f07741b2db336c50cfd89113c0eb011b718ea6
      unrolled_ast: 0b156106d2f50efe97476dfdd1f07741b2db336c50cfd89113c0eb011b718ea6
      ssa_ast: 53c908cf360f5469c561d84a7fc021d985a9cf5e9ed8dc050b0d3937339f14ab
      flattened_ast: bfff4d02525394ef7e29496626789c64dbf4f8b92810fbc79ba38faef114ae69
      destructured_ast: d539c3593943275cd7f4eb2dde377d0be520c64a2d15a00e41ad7242068ffd68
      inlined_ast: d539c3593943275cd7f4eb2dde377d0be520c64a2d15a00e41ad7242068ffd68
      dce_ast: d539c3593943275cd7f4eb2dde377d0be520c64a2d15a00e41ad7242068ffd68
      bytecode: |
        program test.aleo;

        record Token:
            owner as address.private;
            amount as u64.private;

        function main:
            input r0 as u64.private;
            input r1 as u64.private;
            add r0 r1 into r2;
            cast self.caller r2 into r3 as Token.record;
            output r3 as Token.record;
      errors: ''
      warnings: ''
