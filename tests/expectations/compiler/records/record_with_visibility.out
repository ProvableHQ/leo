namespace: Compile
expectation: Pass
outputs:
- - compile:
    - initial_symbol_table: 4399efef323bcfeaa73dd0b4a290600d5d85e36cf99c5d6ffb4fcb3ea59353a3
      type_checked_symbol_table: 20557e7ee74980978625fbd09ed9defc27cc1657ebd95dec0d88a34f80fcf73c
      unrolled_symbol_table: 20557e7ee74980978625fbd09ed9defc27cc1657ebd95dec0d88a34f80fcf73c
      initial_ast: 02e791ec58d79b95c1dcd9eaad1fccc95c503995a5ef053c45fe4d4d71025458
      unrolled_ast: 02e791ec58d79b95c1dcd9eaad1fccc95c503995a5ef053c45fe4d4d71025458
      ssa_ast: 98f1a58e417e30e98196535b5ab67f80a47c00e2fa3ac8136fb6918d7d13ecd6
      flattened_ast: 1473c921dc87393d1bec2cd3469f66c642909f87032fbfb4fdec7db088a07df3
      destructured_ast: cfd232d35ee8cd3768e4924eb4e438a62ad3a04e3df77844c3354aac907a6350
      inlined_ast: cfd232d35ee8cd3768e4924eb4e438a62ad3a04e3df77844c3354aac907a6350
      dce_ast: cfd232d35ee8cd3768e4924eb4e438a62ad3a04e3df77844c3354aac907a6350
      bytecode: |
        program test.aleo;

        record Token:
            owner as address.private;
            amount as u64.private;
            flag as boolean.private;

        function main:
            input r0 as u64.private;
            input r1 as u64.private;
            add r0 r1 into r2;
            cast self.caller r2 true into r3 as Token.record;
            output r3 as Token.record;
      errors: ''
      warnings: ''
